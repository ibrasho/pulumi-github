// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCollaborators(args: GetCollaboratorsArgs, opts?: pulumi.InvokeOptions): Promise<GetCollaboratorsResult> & GetCollaboratorsResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetCollaboratorsResult> = pulumi.runtime.invoke("github:index/getCollaborators:getCollaborators", {
        "affiliation": args.affiliation,
        "owner": args.owner,
        "repository": args.repository,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getCollaborators.
 */
export interface GetCollaboratorsArgs {
    readonly affiliation?: string;
    readonly owner: string;
    readonly repository: string;
}

/**
 * A collection of values returned by getCollaborators.
 */
export interface GetCollaboratorsResult {
    readonly affiliation?: string;
    readonly collaborators: { eventsUrl: string, followersUrl: string, followingUrl: string, gistsUrl: string, htmlUrl: string, id: number, login: string, organizationsUrl: string, permission: string, receivedEventsUrl: string, reposUrl: string, siteAdmin: boolean, starredUrl: string, subscriptionsUrl: string, type: string, url: string }[];
    readonly owner: string;
    readonly repository: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
