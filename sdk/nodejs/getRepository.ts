// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getRepository(args?: GetRepositoryArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoryResult> & GetRepositoryResult {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetRepositoryResult> = pulumi.runtime.invoke("github:index/getRepository:getRepository", {
        "fullName": args.fullName,
        "name": args.name,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getRepository.
 */
export interface GetRepositoryArgs {
    readonly fullName?: string;
    readonly name?: string;
}

/**
 * A collection of values returned by getRepository.
 */
export interface GetRepositoryResult {
    readonly allowMergeCommit: boolean;
    readonly allowRebaseMerge: boolean;
    readonly allowSquashMerge: boolean;
    readonly archived: boolean;
    readonly defaultBranch: string;
    readonly description: string;
    readonly fullName?: string;
    readonly gitCloneUrl: string;
    readonly hasDownloads: boolean;
    readonly hasIssues: boolean;
    readonly hasProjects: boolean;
    readonly hasWiki: boolean;
    readonly homepageUrl: string;
    readonly htmlUrl: string;
    readonly httpCloneUrl: string;
    readonly name?: string;
    readonly private: boolean;
    readonly sshCloneUrl: string;
    readonly svnUrl: string;
    readonly topics: string[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
